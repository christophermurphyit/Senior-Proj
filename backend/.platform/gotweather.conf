# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name gotweather.live www.gotweather.live;
    return 301 https://$host$request_uri;
}

# HTTPS Server Block
server {
    listen 443 ssl http2;  # HTTP/2 for performance (if supported by your Nginx version)
    server_name gotweather.live www.gotweather.live;

    # SSL Configuration (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/gotweather.live/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gotweather.live/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;  # Recommended SSL settings
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;    # Enhances SSL security

    # Root directory for frontend files
    root /var/www/gotweather;  # Adjust to /var/www/gotweather if your files are there
    index index.html;

    # Serve Angular frontend
    location / {
        try_files $uri /index.html;  # Simplified to avoid redirection cycles
    }

    # Proxy API requests to backend
    location /api/ {	
        proxy_pass http://127.0.0.1:5001;  # Matches backend routes like /api/createAccount
        proxy_http_version 1.1;                 # Supports WebSockets
        proxy_set_header Upgrade $http_upgrade; # WebSocket support
        proxy_set_header Connection 'upgrade';  # WebSocket support
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;       # WebSocket support
    }
}

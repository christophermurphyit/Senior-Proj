stages:
  - build
  - deploy

variables:
  ANGULAR_DIR: "got-weather-app"
  BACKEND_DIR: "backend"

build_frontend:
  stage: build
  image: node:20
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
  before_script:
    - cd $ANGULAR_DIR
    - npm ci
  script:
    - npx ng build --configuration=production
  artifacts:
    paths:
      - $ANGULAR_DIR/dist/got-weather-app/

deploy_to_ec2:
  stage: deploy
  image: node:20
  dependencies:
    - build_frontend
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always
  before_script:
    - echo "$EC2_SSH_KEY" > id_rsa
    - chmod 600 id_rsa
  script:
    - scp -r -o StrictHostKeyChecking=no -i id_rsa $ANGULAR_DIR/dist/got-weather-app/browser/* $EC2_USER@$EC2_HOST:/var/www/gotweather/
    - ssh -o StrictHostKeyChecking=no -i id_rsa $EC2_USER@$EC2_HOST "
        cd /home/ubuntu/seniordesign-weather/backend &&
        git fetch origin main &&
        git reset --hard origin/main &&
        npm install &&
        pm2 delete gotweather-backend || true &&
        pm2 start server.js --name gotweather-backend &&
        pm2 save
      "

